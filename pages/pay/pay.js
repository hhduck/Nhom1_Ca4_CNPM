// ==========================
// pay.js - x·ª≠ l√Ω t√≠nh to√°n & giao h√†ng
// ==========================
document.addEventListener('DOMContentLoaded', function () {
  const toVND = n => n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

  const rows = Array.from(document.querySelectorAll("#orderTable tbody tr"));
  const subtotalEl = document.getElementById("subtotal");
  const vatEl = document.getElementById("vat");
  const shippingEl = document.getElementById("shipping");
  const grandEl = document.getElementById("grandtotal");
  const checkoutForm = document.getElementById("checkoutForm");

  // ==========================
  // 1Ô∏è‚É£ T√çNH TO√ÅN ƒê∆†N H√ÄNG
  // ==========================
  let subtotal = 0;
  rows.forEach(r => {
    const price = Number(r.getAttribute("data-price") || 0);
    const qty = Number((r.querySelector(".td-qty") || { textContent: "1" }).textContent.trim()) || 1;
    subtotal += price * qty;
    const priceCell = r.querySelector(".td-price");
    if (priceCell) priceCell.textContent = toVND(price * qty);
  });

  const shipping = 0;
  const vat = Math.round(subtotal * 0.08);
  const grand = subtotal + shipping + vat;

  subtotalEl.textContent = toVND(subtotal);
  vatEl.textContent = toVND(vat);
  shippingEl.textContent = shipping === 0 ? "Mi·ªÖn ph√≠" : toVND(shipping);
  grandEl.textContent = toVND(grand);

  // ==========================
  // 2Ô∏è‚É£ VALIDATION FORM
  // ==========================
  checkoutForm.addEventListener("submit", function (e) {
    e.preventDefault();

    // ·∫®n l·ªói c≈©
    document.querySelectorAll(".error-msg").forEach(el => el.style.display = "none");
    document.querySelectorAll("input").forEach(el => el.classList.remove("error"));

    let isValid = true;

    const name = (this.fullname && this.fullname.value.trim()) || "";
    const phone = this.phone ? this.phone.value.replace(/\s+/g, '') : "";
    const deliveryTimeInput = this.deliveryTime ? this.deliveryTime.value : "";

    // Ki·ªÉm tra h·ªç t√™n
    if (name === "") {
      const err = document.getElementById("nameError");
      err.textContent = "‚ö†Ô∏è Vui l√≤ng nh·∫≠p h·ªç v√† t√™n.";
      err.style.display = "block";
      this.fullname.classList.add("error");
      isValid = false;
    }

    // Ki·ªÉm tra s·ªë ƒëi·ªán tho·∫°i
    if (!/^\d{10}$/.test(phone)) {
      const err = document.getElementById("phoneError");
      err.textContent = "‚ö†Ô∏è S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ ƒë√∫ng 10 ch·ªØ s·ªë.";
      err.style.display = "block";
      this.phone.classList.add("error");
      isValid = false;
    }

    // Ki·ªÉm tra email
    const email = this.email ? this.email.value.trim() : "";
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(email)) {
      const err = document.getElementById("emailError");
      err.textContent = "‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email h·ª£p l·ªá.";
      err.style.display = "block";
      this.email.classList.add("error");
      isValid = false;
    }

    // Ki·ªÉm tra th·ªùi gian nh·∫≠n b√°nh
    if (!deliveryTimeInput) {
      const err = document.getElementById("timeError");
      err.textContent = "‚ö†Ô∏è Vui l√≤ng ch·ªçn th·ªùi gian nh·∫≠n b√°nh.";
      err.style.display = "block";
      this.deliveryTime.classList.add("error");
      isValid = false;
    } else {
      const [datePart, timePart] = deliveryTimeInput.split("T");
      const [year, month, day] = datePart.split("-").map(Number);
      const [hour, minute] = timePart.split(":").map(Number);
      const deliveryTime = new Date(year, month - 1, day, hour, minute);
      const now = new Date();
      const diffHours = (deliveryTime - now) / (1000 * 60 * 60);

      if (diffHours < 2) {
        const err = document.getElementById("timeError");
        err.textContent = "‚ö†Ô∏è Th·ªùi gian nh·∫≠n b√°nh ph·∫£i sau th·ªùi ƒëi·ªÉm ƒë·∫∑t √≠t nh·∫•t 2 ti·∫øng.";
        err.style.display = "block";
        this.deliveryTime.classList.add("error");
        isValid = false;
      } else if (hour < 8 || hour >= 20) {
        const err = document.getElementById("timeError");
        err.textContent = "‚ö†Ô∏è Th·ªùi gian nh·∫≠n b√°nh ph·∫£i trong kho·∫£ng t·ª´ 8:00 ƒë·∫øn 20:00.";
        err.style.display = "block";
        this.deliveryTime.classList.add("error");
        isValid = false;
      }
    }

    // N·∫øu c√≥ l·ªói th√¨ ng·ª´ng l·∫°i
    if (!isValid) return;

    // Th√†nh c√¥ng
    const nameDisplay = name || "Kh√°ch h√†ng";
    alert(`üéâ C·∫£m ∆°n ${nameDisplay}!\nƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n.\nT·ªïng: ${toVND(grand)} VND`);
  });


  // ==========================
  // 3Ô∏è‚É£ CH·ªåN T·ªàNH / PH∆Ø·ªúNG
  // ==========================
  const locationData = {
    hcm: ["S√†i G√≤n", "T√¢n ƒê·ªãnh", "B·∫øn Th√†nh", "C·∫ßu √îng L√£nh", "BaÃÄn C∆°ÃÄ", "Xu√¢n H√≤a", "Nhi√™u L·ªôc", "X√≥m Chi·∫øu", "Kh√°nh H·ªôi", "Vƒ©nh H·ªôi"],
    ld: ["Vƒ©nh H·∫£o", "Li√™n H∆∞∆°ng", "Tuy Phong", "Phan R√≠ C·ª≠a", "B·∫Øc B√¨nh", "H·ªìng Th√°i", "H·∫£i Ninh", "Phan S∆°n", "S√¥ng L≈©y", "L∆∞∆°ng S∆°n"],
    kh: ["Phan Rang", "B·∫£o An", "ƒê√¥ Vinh", "Ninh Ch·ª≠", "ƒê√¥ng H·∫£i", "Ph∆∞·ªõc Dinh", "M·ªπ S∆°n", "Vƒ©nh H·∫£o", "Ninh S∆°n", "Thu·∫≠n Nam"]
  };

  const citySelect = document.getElementById('city');
  const wardSelect = document.getElementById('ward');
  const deliveryOptions = document.querySelectorAll('input[name="delivery"]');
  const deliveryInfo = document.querySelector('.delivery-info');

  // ·∫®n ph·∫ßn ƒë·ªãa ch·ªâ m·∫∑c ƒë·ªãnh
  deliveryInfo.style.display = "none";

  // L·∫Øng nghe khi ng∆∞·ªùi d√πng ch·ªçn ph∆∞∆°ng th·ª©c nh·∫≠n h√†ng
  deliveryOptions.forEach(option => {
    option.addEventListener('change', function () {
      deliveryInfo.style.display = this.value === 'delivery' ? 'block' : 'none';
    });
  });

  // C·∫≠p nh·∫≠t ph∆∞·ªùng / x√£ khi ch·ªçn t·ªânh
  citySelect.addEventListener('change', function () {
    const selectedCity = this.value;
    wardSelect.innerHTML = '<option value="">-- Ch·ªçn ph∆∞·ªùng / x√£ --</option>';
    if (locationData[selectedCity]) {
      locationData[selectedCity].forEach(ward => {
        const opt = document.createElement('option');
        opt.value = ward.trim();
        opt.textContent = ward.trim();
        wardSelect.appendChild(opt);
      });
    }
  });
});
