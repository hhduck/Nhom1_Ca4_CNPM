// ==========================
// pay.js - x·ª≠ l√Ω t√≠nh to√°n & giao h√†ng
// ==========================
document.addEventListener('DOMContentLoaded', () => {

  const toVND = n => n.toLocaleString('vi-VN');

  const subtotalEl = document.getElementById("subtotal");
  const vatEl = document.getElementById("vat");
  const shippingEl = document.getElementById("shipping");
  const grandEl = document.getElementById("grandtotal");
  const checkoutForm = document.getElementById("checkoutForm");
  const promoSelect = document.getElementById("promotionSelect");
  const promoMessage = document.getElementById("promoMessage");

  const locationData = {
    hcm: ["S√†i G√≤n", "T√¢n ƒê·ªãnh", "B·∫øn Th√†nh", "C·∫ßu √îng L√£nh", "BaÃÄn C∆°ÃÄ", "Xu√¢n H√≤a", "Nhi√™u L·ªôc", "X√≥m Chi·∫øu", "Kh√°nh H·ªôi", "Vƒ©nh H·ªôi"],
    ld: ["Vƒ©nh H·∫£o", "Li√™n H∆∞∆°ng", "Tuy Phong", "Phan R√≠ C·ª≠a", "B·∫Øc B√¨nh", "H·ªìng Th√°i", "H·∫£i Ninh", "Phan S∆°n", "S√¥ng L≈©y", "L∆∞∆°ng S∆°n"],
    kh: ["Phan Rang", "B·∫£o An", "ƒê√¥ Vinh", "Ninh Ch·ª≠", "ƒê√¥ng H·∫£i", "Ph∆∞·ªõc Dinh", "M·ªπ S∆°n", "Vƒ©nh H·∫£o", "Ninh S∆°n", "Thu·∫≠n Nam"]
  };

  const citySelect = document.getElementById('city');
  const wardSelect = document.getElementById('ward');
  const deliveryOptions = document.querySelectorAll('input[name="delivery"]');
  const deliveryInfo = document.querySelector('.delivery-info');

  // ==========================
  // 1Ô∏è‚É£ T√≠nh to√°n ƒë∆°n h√†ng
  // ==========================
  function calculateTotals() {
    const rows = document.querySelectorAll("#orderTable tbody tr");
    let subtotal = 0;
    rows.forEach(row => {
      const price = Number(row.dataset.price) || 0;
      const qty = Number(row.querySelector(".td-qty")?.textContent.trim()) || 1;
      subtotal += price * qty;
      const priceCell = row.querySelector(".td-price");
      if (priceCell) priceCell.textContent = toVND(price * qty);
    });

    const shipping = 0;
    const vat = Math.round(subtotal * 0.08);
    const grand = subtotal + shipping + vat;

    subtotalEl.textContent = toVND(subtotal);
    vatEl.textContent = toVND(vat);
    shippingEl.textContent = shipping === 0 ? "Mi·ªÖn ph√≠" : toVND(shipping);
    grandEl.textContent = toVND(grand);
  }

  calculateTotals();

  // ==========================
  // 2Ô∏è‚É£ Load & √°p d·ª•ng khuy·∫øn m√£i
  // ==========================
  async function loadPromotions() {
    try {
      const response = await fetch("../../api/promotions.php");
      const data = await response.json();

      if (!data.success || !data.data?.promotions?.length) {
        promoMessage.textContent = "Hi·ªán ch∆∞a c√≥ khuy·∫øn m√£i kh·∫£ d·ª•ng.";
        return;
      }

      promoSelect.innerHTML = '<option value="">-- Ch·ªçn m√£ khuy·∫øn m√£i --</option>';
      data.data.promotions.forEach(promo => {
        const opt = document.createElement("option");
        opt.value = promo.promotion_code;
        opt.textContent = `${promo.promotion_name} (${promo.promotion_code})`;
        promoSelect.appendChild(opt);
      });

      promoSelect.addEventListener("change", () => {
        const code = promoSelect.value;
        const promo = data.data.promotions.find(p => p.promotion_code === code);
        if (promo) applyPromotion(promo);
      });

    } catch (err) {
      console.error("L·ªói t·∫£i khuy·∫øn m√£i:", err);
      promoMessage.textContent = "Kh√¥ng t·∫£i ƒë∆∞·ª£c danh s√°ch khuy·∫øn m√£i.";
    }
  }

  function applyPromotion(promo) {
    const subtotal = parseInt(subtotalEl.textContent.replace(/\D/g, "")) || 0;
    const now = new Date();
    const start = new Date(promo.start_date);
    const end = new Date(promo.end_date);

    if (now < start || now > end || promo.status !== "active") {
      promoMessage.textContent = "‚ö†Ô∏è M√£ n√†y ch∆∞a ho·∫∑c ƒë√£ h·∫øt h·∫°n!";
      promoMessage.style.color = "orange";
      return;
    }

    if (subtotal < promo.min_order_value) {
      promoMessage.textContent = `ƒê∆°n h√†ng t·ªëi thi·ªÉu ${Number(promo.min_order_value).toLocaleString()}ƒë m·ªõi √°p d·ª•ng ƒë∆∞·ª£c.`;
      promoMessage.style.color = "orange";
      return;
    }

    let discount = 0;
    if (promo.promotion_type === "percent") {
      discount = (promo.discount_value / 100) * subtotal;
      if (promo.max_discount && discount > promo.max_discount) discount = promo.max_discount;
    } else if (promo.promotion_type === "fixed_amount") {
      discount = promo.discount_value;
    } else if (promo.promotion_type === "free_shipping") {
      shippingEl.textContent = "Mi·ªÖn ph√≠";
    }

    grandEl.textContent = toVND(subtotal - discount);
    promoMessage.textContent = `‚úÖ √Åp d·ª•ng m√£ ${promo.promotion_code}, gi·∫£m ${Number(discount).toLocaleString()}ƒë`;
    promoMessage.style.color = "green";
  }

  loadPromotions();

  // ==========================
  // 3Ô∏è‚É£ Validation form
  // ==========================
  checkoutForm.addEventListener("submit", function (e) {
    e.preventDefault();
    document.querySelectorAll(".error-msg").forEach(el => el.style.display = "none");
    document.querySelectorAll("input").forEach(el => el.classList.remove("error"));

    let isValid = true;
    const name = this.fullname?.value.trim() || "";
    const phone = this.phone?.value.replace(/\s+/g, "") || "";
    const email = this.email?.value.trim() || "";
    const deliveryTimeInput = this.deliveryTime?.value || "";

    if (!name) {
      document.getElementById("nameError").textContent = "‚ö†Ô∏è Vui l√≤ng nh·∫≠p h·ªç v√† t√™n.";
      document.getElementById("nameError").style.display = "block";
      this.fullname?.classList.add("error");
      isValid = false;
    }

    if (!/^\d{10}$/.test(phone)) {
      document.getElementById("phoneError").textContent = "‚ö†Ô∏è S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ ƒë√∫ng 10 ch·ªØ s·ªë.";
      document.getElementById("phoneError").style.display = "block";
      this.phone?.classList.add("error");
      isValid = false;
    }

    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      document.getElementById("emailError").textContent = "‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email h·ª£p l·ªá.";
      document.getElementById("emailError").style.display = "block";
      this.email?.classList.add("error");
      isValid = false;
    }

    if (!deliveryTimeInput) {
      document.getElementById("timeError").textContent = "‚ö†Ô∏è Vui l√≤ng ch·ªçn th·ªùi gian nh·∫≠n b√°nh.";
      document.getElementById("timeError").style.display = "block";
      this.deliveryTime?.classList.add("error");
      isValid = false;
    } else {
      const [datePart, timePart] = deliveryTimeInput.split("T");
      const [year, month, day] = datePart.split("-").map(Number);
      const [hour, minute] = timePart.split(":").map(Number);
      const deliveryTime = new Date(year, month - 1, day, hour, minute);
      const diffHours = (deliveryTime - new Date()) / (1000 * 60 * 60);

      if (diffHours < 2) {
        document.getElementById("timeError").textContent = "‚ö†Ô∏è Th·ªùi gian nh·∫≠n b√°nh ph·∫£i sau th·ªùi ƒëi·ªÉm ƒë·∫∑t √≠t nh·∫•t 2 ti·∫øng.";
        document.getElementById("timeError").style.display = "block";
        this.deliveryTime?.classList.add("error");
        isValid = false;
      } else if (hour < 8 || hour >= 20) {
        document.getElementById("timeError").textContent = "‚ö†Ô∏è Th·ªùi gian nh·∫≠n b√°nh ph·∫£i trong kho·∫£ng t·ª´ 8:00 ƒë·∫øn 20:00.";
        document.getElementById("timeError").style.display = "block";
        this.deliveryTime?.classList.add("error");
        isValid = false;
      }
    }

    if (!isValid) return;

    alert(`üéâ C·∫£m ∆°n ${name || "Kh√°ch h√†ng"}!\nƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n.\nT·ªïng: ${grandEl.textContent} VND`);
  });

  // ==========================
  // 4Ô∏è‚É£ Ch·ªçn t·ªânh / ph∆∞·ªùng
  // ==========================
  deliveryInfo.style.display = "none";
  deliveryOptions.forEach(option => {
    option.addEventListener("change", function () {
      deliveryInfo.style.display = this.value === 'delivery' ? 'block' : 'none';
    });
  });

  citySelect.addEventListener("change", function () {
    const selectedCity = this.value;
    wardSelect.innerHTML = '<option value="">-- Ch·ªçn ph∆∞·ªùng / x√£ --</option>';
    if (locationData[selectedCity]) {
      locationData[selectedCity].forEach(ward => {
        const opt = document.createElement('option');
        opt.value = ward.trim();
        opt.textContent = ward.trim();
        wardSelect.appendChild(opt);
      });
    }
  });

});
